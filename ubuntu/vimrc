
"------------------------- Vundle Start ------------------------------"

set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

Plugin 'scrooloose/nerdtree'

Plugin 'tpope/vim-fugitive'

Plugin 'vim-scripts/AutoComplPop'

Plugin 'ervandew/supertab'

"snipmate
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'tomtom/tlib_vim'
Plugin 'garbas/vim-snipmate'

Plugin 'tpope/vim-surround'

Plugin 'tpope/vim-markdown'

Plugin 'tomasr/molokai'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

"------------------------- Vundle End ------------------------------"

source $VIMRUNTIME/vimrc_example.vim
source $VIMRUNTIME/gvimrc_example.vim

"runtimepath
set rtp+=~/.vim/mine

"use forward slashes in file names;
set ssl

set autochdir
"Auto change to editing file's cwd
autocmd BufEnter * cd %:p:h

"��ʹ�ñ����ļ�
set nobackup
"������swap�ļ�����buffuer������ʱ������
set noswapfile
set bufhidden=hide

set guioptions-=b
set guioptions-=r
set guioptions-=l
"set guioptions-=m   "���ز˵�
set guioptions-=T   "���ع�����
set guioptions=m

"���ô��ڴ�С�ͳ�ʼλ��
set lines=35
set columns=120
winpos 400 100
"���������еĸ߶�
set cmdheight=1

"�����ļ����Ͳ��
filetype plugin on
"Ϊ�ض������ļ����������ļ�
filetype indent on

highlight StatusLine guifg=SlateBlue guibg=Yellow
highlight StatusLineNC guifg=Gray guibg=White

"�Զ���ʽ��
set formatoptions=tcrqn
"�̳�ǰһ�е�������ʽ�Զ�����
set autoindent
"ʹ��c��������
set cindent
"Ϊc�����ṩ�Զ�����
set smartindent

"���Զ�����
set nowrap
autocmd BufRead,BufNewFile *.txt set wrap
autocmd BufRead,BufNewFile *.note set wrap

" txtBrowser
au BufEnter *.txt setlocal ft=txt

"�����״ʻ㲻�������Ŵ����������У�
set iskeyword+=_,$,@,%,#,-

"��������1��tab
set smarttab

"tabΪ4���ո�
set tabstop=4
"ͳһ����Ϊ4���ո�
set softtabstop=4
set shiftwidth=4
"tabת��Ϊ�ո�
set expandtab

"�﷨����
syntax on

"�о࣬��λΪ����
set linespace=1

"��ʾ�к�
set number

"������ʾƥ�������
set showmatch
"ƥ�����Ÿ�����ʱ�䣬��λΪ1/10s
set matchtime=5
"����ʱ���Դ�Сд
set ignorecase
"�������������ľ���
set nohlsearch

"�������봰�ڶ����ײ�8��ʱ�Զ������ƶ�
set scrolloff=5

"��ʹ��vi����ģʽ��ʹ��vimģʽ
set nocompatible

"������ǰ��
"set cursorline

"��������
set hlsearch

"��ʾ���������
set showcmd

"�趨���ֱ���
"set encoding=utf-8
set fenc=utf-8
set fencs=utf-8,usc-bom,euc-jp,gb18030,gbk,gb2312,cp936

"�ڴ���δ�����ֻ���ļ�ʱ������ȷ�Ͽ�
set confirm

"history�ļ���Ҫ��¼������
set history=100

"����ʱ����ʾ��ʾ
set shortmess=atl

"����˸
set novisualbell

set foldenable
set fdls=1
"�����﷨�۵�
set foldmethod=syntax
"�����۵��������
set foldcolumn=3
"�ÿո��������۵�
nnoremap <space> @=((foldclosed(line('.')) < 0) ? 'zc' : 'zo')<CR>
autocmd FileType php map <F9> <ESC>@=((foldclosed(line('.')) < 0) ? 'zM' : 'zR')<CR>

set nofoldenable

set sm "��ʾ����������

"Auto Complete opt
"set completeopt=longest,menuone

"turn on omnicompletion
set ofu=syntaxcomplete#Complete

"Auto-completion of functions and constants
autocmd FileType python set omnifunc=pythoncomplete#Complete
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
autocmd FileType php set omnifunc=phpcomplete#CompletePHP
autocmd FileType c set omnifunc=ccomplete#complete

set complete-=k complete+=k

"tab
imap <silent> <F3> <ESC>:tabnew<CR><F7>
map <silent> <F3> :tabnew<CR><F7>
imap <silent> <F4> <ESC>:tabclose<CR>
map <silent> <F4> :tabclose<CR>
imap <silent> gb <ESC>:tabprev<CR>
map <silent> gb :tabprev<CR>

"File history
let MRU_Max_Entries=20

"Search
set noignorecase

"Switch buffer
"Switch in different parts
map <silent> <LEADER>q :q<CR>
map <silent> <LEADER><LEADER> :w<CR>
map <silent> <LEADER>h :sp<CR>
map <silent> <LEADER>v :vsp<CR>
map <silent> <LEADER>a <C-W><Left>
map <silent> <LEADER>f <C-W><Right>
map <silent> <LEADER>s <C-W><Down>
map <silent> <LEADER>d <C-W><Up>
map <silent> <LEADER>= <C-W>+
map <silent> <LEADER>- <C-W>-
map <silent> <LEADER>z <C-W>_

"c/v key mapping
vmap <C-c> "+y
vmap <C-x> "+c
vmap <C-v> c<ESC>"+p
imap <C-v> <C-r><C-o>+
nmap <C-v> "+p

"NERD Tree
let NERDTreeChDirMode=2
au VimEnter * NERDTree "auto open
map <silent> <F3> :NERDTreeToggle<CR>
imap <silent> <F3> <ESC>:NERDTreeToggle<CR>

"ACP - with Super Tab
let g:acp_mappingDriven = 0 
let g:acp_completeoptPreview=0
let g:acp_completeOption = '.,w,b,t,i,d,k,u,U,s'
let g:acp_completeOption = '.,w,b,u,t,i,k'
let g:acp_behaviorPhpOmniLength = 1
let g:acp_behaviorKeywordLength = 1
autocmd FileType php let g:acp_behaviorKeywordLength = 2

"molokai
colorscheme molokai
